/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package manager;

import java.sql.*;
import Conexao.ConexaoBD;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Usuario
 */
public class CadParticipantes extends javax.swing.JFrame {

    Connection conexao = ConexaoBD.conector();
    PreparedStatement pst;
    ResultSet rs;

    /**
     * Creates new form CadParticipantes
     */
    public CadParticipantes() {
        conexao = ConexaoBD.conector();
        System.out.println(conexao);
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        voltar = new javax.swing.JButton();
        textonome = new javax.swing.JTextField();
        textosobrenome = new javax.swing.JTextField();
        cadastrar = new javax.swing.JButton();
        fundo = new javax.swing.JLabel();

        setTitle("Cadastro de participantes");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        voltar.setBorder(null);
        voltar.setContentAreaFilled(false);
        voltar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarActionPerformed(evt);
            }
        });
        getContentPane().add(voltar, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 50, 40, 20));

        textonome.setBackground(new java.awt.Color(226, 137, 171));
        textonome.setBorder(null);
        textonome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textonomeActionPerformed(evt);
            }
        });
        getContentPane().add(textonome, new org.netbeans.lib.awtextra.AbsoluteConstraints(296, 160, 180, 16));

        textosobrenome.setBackground(new java.awt.Color(226, 137, 171));
        textosobrenome.setBorder(null);
        textosobrenome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textosobrenomeActionPerformed(evt);
            }
        });
        getContentPane().add(textosobrenome, new org.netbeans.lib.awtextra.AbsoluteConstraints(296, 222, 180, 16));

        cadastrar.setBorder(null);
        cadastrar.setContentAreaFilled(false);
        cadastrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarActionPerformed(evt);
            }
        });
        getContentPane().add(cadastrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(235, 304, 91, 28));

        fundo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/cadastrar (2).png"))); // NOI18N
        getContentPane().add(fundo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 1, 582, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void textosobrenomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textosobrenomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textosobrenomeActionPerformed

    private void cadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarActionPerformed
        try {
            Cadastrar();        // TODO add your handling code here:
        } catch (SQLException ex) {
            Logger.getLogger(CadParticipantes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cadastrarActionPerformed

    private void textonomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textonomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textonomeActionPerformed

    private void voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarActionPerformed
       TelaInicial inicio = new TelaInicial();
       inicio.setVisible(true);
       this.dispose();
    }//GEN-LAST:event_voltarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadParticipantes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new CadParticipantes().setVisible(true);
        });
    }

    public void Cadastrar() throws SQLException {
        String sql2 = "SELECT count( fksala1) as total FROM tbparticipantes  where fksala1=1;";
        pst = conexao.prepareStatement(sql2);
        rs = pst.executeQuery();

        if (rs.next()) {
            int sala1tipo1 = rs.getInt(1);
            System.out.println(sala1tipo1);
            String sql3 = "SELECT count( fksala1) as total FROM tbparticipantes where fksala1=2 ;";
            pst = conexao.prepareStatement(sql3);
            rs = pst.executeQuery();
            if (rs.next()) {
                int sala1tipo2 = rs.getInt(1);
                System.out.println(sala1tipo2);
                String sql4 = "SELECT count( fksala1) as total FROM tbparticipantes where fksala1=3 ;";
                pst = conexao.prepareStatement(sql4);
                rs = pst.executeQuery();
                if (rs.next()) {
                    int sala1tipo3 = rs.getInt(1);
                    System.out.println(sala1tipo3);
                    String sql5 = "SELECT count( fksala2) as total FROM tbparticipantes where fksala2=1 ;";
                    pst = conexao.prepareStatement(sql5);
                    rs = pst.executeQuery();
                    if (rs.next()) {
                        int sala2tipo1 = rs.getInt(1);
                        System.out.println(sala2tipo1);
                        String sql6 = "SELECT count( fksala2) as total FROM tbparticipantes where fksala2=2 ;";
                        pst = conexao.prepareStatement(sql6);
                        rs = pst.executeQuery();
                        if (rs.next()) {
                            int sala2tipo2 = rs.getInt(1);
                            System.out.println(sala2tipo2);
                            String sql7 = "SELECT count( fksala2) as total FROM tbparticipantes where fksala2=3 ;";
                            pst = conexao.prepareStatement(sql7);
                            rs = pst.executeQuery();
                            if (rs.next()) {
                                int sala2tipo3 = rs.getInt(1);
                                System.out.println(sala2tipo3);

                                if (sala1tipo1 <= 9 && sala2tipo1 <= 9 && sala1tipo1<=sala1tipo2) {
                                    String sql = "insert into tbparticipantes ( nomeparticipante, sobrenomeparticipante, fksala1, fksala2,fkcafe1,fkcafe2)VALUES (?,?,1,1,1,2); ";
                                    try {
                                        conexao.setAutoCommit(false);
                                        pst = conexao.prepareStatement(sql);

                                        pst.setString(1, textonome.getText());
                                        pst.setString(2, textosobrenome.getText());

                                        if ((textonome.getText().isEmpty()) || (textosobrenome.getText().isEmpty())) {
                                            JOptionPane.showMessageDialog(null, "Preencha todos os campos ", "Aviso!", JOptionPane.INFORMATION_MESSAGE);
                                        } else {

                                            int adicionado = pst.executeUpdate();
                                            if (adicionado > 0) {

                                                textonome.setText(null);
                                                textosobrenome.setText(null);
                                                JOptionPane.showMessageDialog(null, "Participante cadastrado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                                            }

                                        }
                                        conexao.commit();

                                    } catch (SQLException e) {
                                        JOptionPane.showMessageDialog(null, e);
                                    }

                                } else if (sala1tipo1 >= 10 && sala1tipo1 <= 19 && sala2tipo2 >= 10 && sala2tipo2 <= 19  && sala1tipo1<=sala1tipo2 && sala2tipo2<=sala2tipo3) {
                                    String sql = "insert into tbparticipantes ( nomeparticipante, sobrenomeparticipante, fksala1, fksala2,fkcafe1,fkcafe2)VALUES (?,?,1,2,1,1); ";
                                    try {
                                        conexao.setAutoCommit(false);
                                        pst = conexao.prepareStatement(sql);

                                        pst.setString(1, textonome.getText());
                                        pst.setString(2, textosobrenome.getText());

                                        if ((textonome.getText().isEmpty()) || (textosobrenome.getText().isEmpty())) {
                                            JOptionPane.showMessageDialog(null, "Preencha todos os campos ", "Aviso!", JOptionPane.INFORMATION_MESSAGE);
                                        } else {

                                            int adicionado = pst.executeUpdate();
                                            if (adicionado > 0) {

                                                textonome.setText(null);
                                                textosobrenome.setText(null);
                                                JOptionPane.showMessageDialog(null, "Participante cadastrado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                                            }

                                        }
                                        conexao.commit();

                                    } catch (SQLException e) {
                                        JOptionPane.showMessageDialog(null, e);
                                    }

                                } else if (sala1tipo2 <= 9 && sala2tipo2  <= 9 && sala1tipo2<sala1tipo3 && sala2tipo2<sala2tipo3) {
                                    String sql = "insert into tbparticipantes ( nomeparticipante, sobrenomeparticipante, fksala1, fksala2,fkcafe1,fkcafe2)VALUES (?,?,2,2,1,2); ";
                                    try {
                                        conexao.setAutoCommit(false);
                                        pst = conexao.prepareStatement(sql);

                                        pst.setString(1, textonome.getText());
                                        pst.setString(2, textosobrenome.getText());

                                        if ((textonome.getText().isEmpty()) || (textosobrenome.getText().isEmpty())) {
                                            JOptionPane.showMessageDialog(null, "Preencha todos os campos ", "Aviso!", JOptionPane.INFORMATION_MESSAGE);
                                        } else {

                                            int adicionado = pst.executeUpdate();
                                            if (adicionado > 0) {

                                                textonome.setText(null);
                                                textosobrenome.setText(null);
                                                JOptionPane.showMessageDialog(null, "Participante cadastrado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                                            }

                                        }
                                        conexao.commit();

                                    } catch (SQLException e) {
                                        JOptionPane.showMessageDialog(null, e);
                                    }
                                } else if (sala1tipo2 >= 10 && sala1tipo2 <= 19 && sala2tipo3 >= 10 && sala2tipo3 <= 29 && sala1tipo2<sala1tipo3 && sala2tipo3<sala2tipo1) {
                                    String sql = "insert into tbparticipantes ( nomeparticipante, sobrenomeparticipante, fksala1, fksala2,fkcafe1,fkcafe2)VALUES (?,?,2,3,2,2); ";
                                    try {
                                        conexao.setAutoCommit(false);
                                        pst = conexao.prepareStatement(sql);

                                        pst.setString(1, textonome.getText());
                                        pst.setString(2, textosobrenome.getText());

                                        if ((textonome.getText().isEmpty()) || (textosobrenome.getText().isEmpty())) {
                                            JOptionPane.showMessageDialog(null, "Preencha todos os campos ", "Aviso!", JOptionPane.INFORMATION_MESSAGE);
                                        } else {

                                            int adicionado = pst.executeUpdate();
                                            if (adicionado > 0) {

                                                textonome.setText(null);
                                                textosobrenome.setText(null);
                                                JOptionPane.showMessageDialog(null, "Participante cadastrado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                                            }

                                        }
                                        conexao.commit();

                                    } catch (SQLException e) {
                                        JOptionPane.showMessageDialog(null, e);
                                    }
                                } else if (sala1tipo3 <= 9 && sala2tipo3 <= 9 && sala1tipo3<sala1tipo1 && sala2tipo3<sala2tipo1) {
                                    String sql = "insert into tbparticipantes ( nomeparticipante, sobrenomeparticipante, fksala1, fksala2,fkcafe1,fkcafe2)VALUES (?,?,3,3,2,1); ";
                                    try {
                                        conexao.setAutoCommit(false);
                                        pst = conexao.prepareStatement(sql);

                                        pst.setString(1, textonome.getText());
                                        pst.setString(2, textosobrenome.getText());

                                        if ((textonome.getText().isEmpty()) || (textosobrenome.getText().isEmpty())) {
                                            JOptionPane.showMessageDialog(null, "Preencha todos os campos ", "Aviso!", JOptionPane.INFORMATION_MESSAGE);
                                        } else {

                                            int adicionado = pst.executeUpdate();
                                            if (adicionado > 0) {

                                                textonome.setText(null);
                                                textosobrenome.setText(null);
                                                JOptionPane.showMessageDialog(null, "Participante cadastrado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                                            }

                                        }
                                        conexao.commit();

                                    } catch (SQLException e) {
                                        JOptionPane.showMessageDialog(null, e);
                                    }
                                } else if (sala1tipo3 >= 10 && sala1tipo3 <= 29 && sala2tipo1 >= 10 && sala2tipo1 <= 19 &&  sala1tipo3<sala1tipo1 && sala2tipo1<sala2tipo2) {
                                    String sql = "insert into tbparticipantes ( nomeparticipante, sobrenomeparticipante, fksala1, fksala2,fkcafe1,fkcafe2)VALUES (?,?,3,1,2,1); ";
                                    try {
                                        conexao.setAutoCommit(false);
                                        pst = conexao.prepareStatement(sql);

                                        pst.setString(1, textonome.getText());
                                        pst.setString(2, textosobrenome.getText());

                                        if ((textonome.getText().isEmpty()) || (textosobrenome.getText().isEmpty())) {
                                            JOptionPane.showMessageDialog(null, "Preencha todos os campos ", "Aviso!", JOptionPane.INFORMATION_MESSAGE);
                                        } else {

                                            int adicionado = pst.executeUpdate();
                                            if (adicionado > 0) {

                                                textonome.setText(null);
                                                textosobrenome.setText(null);
                                                JOptionPane.showMessageDialog(null, "Participante cadastrado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                                            }

                                        }
                                        conexao.commit();

                                    } catch (SQLException e) {
                                        JOptionPane.showMessageDialog(null, e);
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "Lotação máxima! Não é possível cadastrar mais participantes.");
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cadastrar;
    private javax.swing.JLabel fundo;
    private javax.swing.JTextField textonome;
    private javax.swing.JTextField textosobrenome;
    private javax.swing.JButton voltar;
    // End of variables declaration//GEN-END:variables
}
